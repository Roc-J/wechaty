/*!
 * Brolog JavaScript Library v1.1.0
 * https://github.com/zixia/brolog
 *
 * Copyright Huan LI <zixia@zixia.net>
 * Released under the ISC license
 * https://github.com/zixia/brolog/blob/master/LICENSE
 *
 * Date: 2016-07
 */
export declare type LevelName = 'silent' | 'error' | 'warn' | 'info' | 'verbose' | 'silly';
export declare type LevelTitle = 'ERR' | 'WARN' | 'INFO' | 'VERB' | 'SILL';
export interface Loggable {
    error(prefix: string, message: string, ...args: any[]): void;
    warn(prefix: string, message: string, ...args: any[]): void;
    info(prefix: string, message: string, ...args: any[]): void;
    verbose(prefix: string, message: string, ...args: any[]): void;
    silly(prefix: string, message: string, ...args: any[]): void;
}
export declare const nullLogger: Loggable;
export declare class Brolog implements Loggable {
    private logLevel;
    private prefixFilter;
    constructor();
    /**
     * Create a global Brolog Instance for sharing between modules
     */
    static instance(levelName?: LevelName, prefix?: string | RegExp): Brolog;
    static enableLogging(log: boolean | Loggable): Loggable;
    static prefix(filter?: string | RegExp): RegExp;
    prefix(filter?: string | RegExp): RegExp;
    static level(levelName?: LevelName): LevelName;
    level(levelName?: LevelName): LevelName;
    private log(levelTitle, prefix, message);
    static error(prefix: string, ...args: any[]): void;
    error(prefix: string, ...args: any[]): void;
    static warn(prefix: string, ...args: any[]): void;
    warn(prefix: string, ...args: any[]): void;
    static info(prefix: string, ...args: any[]): void;
    info(prefix: string, ...args: any[]): void;
    static verbose(prefix: string, ...args: any[]): void;
    verbose(prefix: string, ...args: any[]): void;
    static silly(prefix: string, ...args: any[]): void;
    silly(prefix: string, ...args: any[]): void;
    static timestamp(): string;
}
export declare const globalBrolog: Brolog;
export { globalBrolog as log };
export default globalBrolog;
